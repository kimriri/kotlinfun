안드로이드 예제로 이해하는 코틀린
코트린 안드롤이드 프로그래밍


1, 클래스의 작동 118p ~ 119p
    fun(function)을 다룰때 return 이 있는 경우 여러개의 return 을 여러개 사용 하는 것 보다
    하나의 return 만 사용 하는게 저자의 경험상 좋다.

    연습 문제 7

    다음은 참인가 ?

    fun printOut(d:Double) {
        println(d)
    }

    정답: 참

     연습 문제 8

    다음 클래스를 짧게 만들길 바란다.

    class A(val a:Int){
    fun add(b:Int):Int {
        return a + b
    }

    fun mult(b:Int):Int {
        return a * b
    }
    }

    정답

        class A(val a:Int){
        fun add(b:Int) = a + b
        fun mult(b:Int) = a * b
        }

       참조 : 표현식은 변종을 사용한다.

       연습문제 9

       연습문제 8의 크래스 A의 모든 것을 기술하는 AInterface 인터페이스를 만들길 바란다.

       정답

       interface AInterface {
               fun add(b:Int):Int
               fun mult(b:Int):Int
       }

       연습문제 10

       다음의 출력 결과물은 ?

       class A {
         val xyz:Int = 7
         fun meth1(xyz:Int): String {
          return "meth1:" + xyz" +
                    " " + this.xyz
         }
         // "meth1:" " + xyz" + " " + this.syz 에서 xyz는 매개 변수 xyz 를 this.xyz는 프로퍼티 xyz 를 뜻한다.

         fun main(args:Array<String>) {
            val a= A()
            println(a.meth1(42))

         // 따라서 출력은 meth1 42(매개변수 xyz) + 7(프로퍼티 xyz) 가 된다.
         }
       }

       연습문제 11

       class A {
         companion object {
            fun x(a:Int): Int {
            return a + 7
            }
         }
       }

  다음의 클래스가 있을때 이러한 클래스 외부의 print() 함수에서 42를 매개변수로 해 x() 함수에 접근하려면 어떻게 해야 하는가?

  정답 : printin(A.x(42))

  동반자 객체를 사용 할 경우 class의 instance는 필요 없다.

  동반자 객체는 ?  -> companion object







